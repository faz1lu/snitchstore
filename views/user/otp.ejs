<!DOCTYPE html>
<html>

<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <meta http-equiv="X-UA-Compatible" content="ie=edge" />
  <title>Otp-Verification</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" />
  <style>
    .height-100 {
      height: 100vh
    }

    .card {
      width: 400px;
      border: none;
      height: 300px;
      box-shadow: 0px 5px 20px 0px #d2dae3;
      z-index: 1;
      display: flex;
      justify-content: center;
      align-items: center
    }

    .card h6 {
      color: red;
      font-size: 20px
    }

    .inputs input {
      width: 40px;
      height: 40px
    }

    input[type=number]::-webkit-inner-spin-button,
    input[type=number]::-webkit-outer-spin-button {
      -webkit-appearance: none;
      -moz-appearance: none;
      appearance: none;
      margin: 0
    }

    .card-2 {
      background-color: #fff;
      padding: 10px;
      width: 350px;
      height: 100px;
      bottom: -50px;
      left: 20px;
      position: absolute;
      border-radius: 5px
    }

    .card-2 .content {
      margin-top: 50px
    }

    .card-2 .content a {
      color: red
    }

    .form-control:focus {
      box-shadow: none;
      border: 2px solid red
    }

    .validate {
      border-radius: 20px;
      height: 40px;
      background-color: red;
      border: 1px solid red;
      width: 140px
    }
  </style>
</head>

<body>
  <div class="container height-100 d-flex justify-content-center align-items-center">
    <div class="position-relative">
      <div class="card p-2 text-center">
        <% if(otpErr.length>0){ %>
        <p class="alert text-center" style="color: red;"><%= otpErr %></p>
        <% } %>
        <h6>Please enter the one time password <br> to verify your account</h6>
        <div> <span>A code has been sent to</span> <small>*******<%=phone.substring(6)%></small> </div>
        <form action="/postotp" method="post">

            <div id="otp" class="inputs d-flex flex-row justify-content-center mt-2"> 
                <input class="m-2 text-center form-control rounded" name="otp" type="password" id="first" maxlength="1" /> 
                <input class="m-2 text-center form-control rounded" name="otp" type="password" id="second" maxlength="1" />
                <input class="m-2 text-center form-control rounded" type="password" name="otp" id="third" maxlength="1" /> 
                <input class="m-2 text-center form-control rounded" type="password" name="otp" id="fourth" maxlength="1" /> 
                <input class="m-2 text-center form-control rounded" type="password" name="otp" id="fifth" maxlength="1" />
                <input class="m-2 text-center form-control rounded" type="password" name="otp" id="sixth" maxlength="1" />
            </div>
            <div class="mt-4"> <button type="submit" class="btn btn-danger px-4 validate">Validate</button> </div>
        </form>
      </div>
      <p class="ml-5 text-danger" id="errmsg" style="display: none">
        OTP verification failed
    </p>
    </div>
  </div>
  <script>
    document.addEventListener("DOMContentLoaded", function(event) {

      function OTPInput() {
        const inputs = document.querySelectorAll('#otp > *[id]');
        for (let i = 0; i < inputs.length; i++) {
          inputs[i].addEventListener('keydown', function(event) {
            if (event.key === "Backspace") {
              inputs[i].value = '';
              if (i !== 0) inputs[i - 1].focus();
            } else {
              if (i === inputs.length - 1 && inputs[i].value !== '') {
                return true;
              } else if (event.keyCode > 47 && event.keyCode < 58) {
                inputs[i].value = event.key;
                if (i !== inputs.length - 1) inputs[i + 1].focus();
                event.preventDefault();
              } else if (event.keyCode > 64 && event.keyCode < 91) {
                inputs[i].value = String.fromCharCode(event.keyCode);
                if (i !== inputs.length - 1) inputs[i + 1].focus();
                event.preventDefault();
              }
            }
          });
        }
      }
      OTPInput();
    });


    
    
    function otpcheck() {
                let otp = document.getElementById("otpid").value;
                if (otp.length === 6) {
                    document.getElementById("otpid").disabled = true;
                    try {
                        axios.post("/otp_verifyied", { otp: otp }).then((e) => {
                            if (e.data.response) {
                                location.href = "/";
                            } else {
                                document.getElementById("otpid").value = "";
                                document.getElementById("otpid").disabled = false;
                                document.getElementById("errmsg").style.display = "";
                            }
                        });
                    } catch (error) {
                        console.log(error);
                    }
                }
            }
  </script>
</body>

</html>